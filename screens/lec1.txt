PHP CLI
command line interface

Приложение, которое  запускается из консоли.

-автоматизация данных
-обработка данных
-тестирование и отладка
-написание консольных утилит

$argc argv
Передаваемые аргументы через консоль

getopt() - более современный способ передавать аргументы

symphony console 
упрощает создание приложений с ОБШИРНЫМИ аргументами

CRON
Утилита для планирования задач по расписанию
crontab - команды управления

usr/bin/echo date + `%H^%M`; 
строка которая выоводит время

date + `%H^%M` > log.txt - записываем результат скрипта в файл

nano echo_date.sh - создаем файл
в него пишем скрипт

теперь вбиваем задачу в crontab
crontab -e 

* * * * * command
1 - минута (если звездочка, каждая минута)
2 - часы (0-23, * - каждый час)
3 - день месяца (* - каждый месяц)
4 - месяц (0-12)
5 - день недели (0-6)

Pwd - полный путь к текущей директории
также надо выдать права на исполнение

cmod +x echo_date.sh

* * * * * /home/occure/echo_date.sh (ctrl + o - сохранить)
crontab -h - все флаги для кронтаб


cd /var/spool/cron/crontabs# - файл крона для ubuntu

HUP - заверщающие сигналы

kill -HUP $(pgrep cron) - пересчитывает конфигурацию крон

таккже надо изменить группу для файла
с помощью chown:root

chmod 600 - меняем права (linux)

cron - файлы конфигурация ОС
crontab - утилита для редактирования

SYSTEMD
________________
Более продвинутый планировщик задач,
но с таймерами больше используется CRON

Программа для управления службами

Служба - программа запускается при старте компьютера
Таймер - в определенное время
___________________________

DAEMON

Процессы, которые работают в фоне, вне зависимости от сессии пользователя

Демонизация
Запуск процесса в качестве демона

nohup - запуск процесса, не зависящего от сессии
setsid - новая сессия, не зависящая от текущего

SUPERVISOR
программа, инструмент для управления скриптами и мониторинг процессов,
программа которая запускает скрипты демона

___________________________________________________________
Семинар:
Начинаем с того, что указываем в .env базу данных
Конфиг для запуска в демон режиме:
(/etc/supervisor/conf/bot.conf)

[program:worker]
process_name=%(program_name)s_%(process_num)02d
command=php8.2 ПУТЬДОФАЙЛА_RUNNER -c handle_events_daemon
autostart=true
autorestart=true
user=www-data
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/worker



php runner -c save_event --name 'name' --receiver 1 --text 'text' --cron '* * * * *' * * * * * php runner -c handle_events

sudo supervisorctl signal HUP all - остановка 
sudo service supervisor reload - перезагрузка
sudo supervisorctl status


